// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace SaleManager.Core.Entities
{
    [Index(nameof(CategoryID), Name = "CategoryID")]
    [Index(nameof(ProductName), Name = "ProductName")]
    [Index(nameof(SupplierID), Name = "SuppliersProducts")]
    public partial class Products
    {
        public Products()
        {
            Order_Details = new HashSet<Order_Details>();
            ProductParts = new HashSet<ProductParts>();
        }

        [Key]
        public int ProductID { get; set; }
        [Required]
        [StringLength(40)]
        public string ProductName { get; set; }
        public int? SupplierID { get; set; }
        public int? CategoryID { get; set; }
        [StringLength(20)]
        public string QuantityPerUnit { get; set; }
        [Column(TypeName = "money")]
        public decimal? CashCost { get; set; }
        [Column(TypeName = "money")]
        public decimal? ChecqueCost { get; set; }
        [Column(TypeName = "money")]
        public decimal? UnitPrice { get; set; }
        public short? UnitsInStock { get; set; }
        public short? UnitsOnOrder { get; set; }
        public short? ReorderLevel { get; set; }
        public bool? Discontinued { get; set; }
        public bool? Active { get; set; }
        [Column(TypeName = "image")]
        public byte[] Photo { get; set; }
        [StringLength(255)]
        public string PhotoPath { get; set; }
        public string Units { get; set; }
        public int? CompanyID { get; set; }

        [ForeignKey(nameof(CategoryID))]
        [InverseProperty(nameof(Categories.Products))]
        public virtual Categories Category { get; set; }
        [ForeignKey(nameof(SupplierID))]
        [InverseProperty(nameof(Suppliers.Products))]
        public virtual Suppliers Supplier { get; set; }
        [InverseProperty("Product")]
        public virtual ICollection<Order_Details> Order_Details { get; set; }
        [InverseProperty("Product")]
        public virtual ICollection<ProductParts> ProductParts { get; set; }
    }
}